import unittest

from damkina import apphandler, entitymgr, appl
from enki import kbeclient, descr, settings
from enki.interface import IMessage, IMsgReceiver


class TODOTestCase(unittest.TestCase):
    """Test ???"""

    def setUp(self):
        super().setUp()

        login_app_addr = settings.AppAddr('0.0.0.0', 20013)
        self._app = appl.App(login_app_addr, server_tick_period=5)
        self._entity_mgr: entitymgr.EntityMgr = entitymgr.EntityMgr(self._app)

    def test_ok(self):
        data = b'\x00\x02\xf0\x00\x00\x00\xff\x01 \x00\xf1\x00\x00\x00\x00\x08\x07\x00\x00\x00\xf1\x00\x00\x00\x03\x00\x00\x00\x00\t\x07\x00\x00\x00\xf1\x00\x00\x00\x03\x00\x00\x00\xf8\x01\x13\x00\x00\x00\x07\x00\xbd6\xfeb\xf1\x00\x00\x00Avatar\x00\xff\x01\xb1\x00\xf1\x00\x00\x00\x00\x03\x01\x00\x00\x00\x00\x01\x81\xe5@D\x83\x00SC3#BD\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04d\x00\x00\x00\x00\x05\x00\x00\x00\x00\x00\x06d\x00\x00\x00\x00\x07\x00\x00\x00\x00\x00\x08\x07\x00\x00\x00\xf1\x00\x00\x00\x03\x00\x02\x00\x08\x04\xe9\x03\x00\x00\x08\x05\xc8\x01\x00\x00\x00\n\x07\x00\x00\x00\xf1\x00\x00\x00\x04\x00\x02\x00\n\x04\xe9\x03\x00\x00\n\x05x\x03\x00\x00\x00\x0b\x00\x00\x00\x00\x00\x0c\x01\x00\x00\r\x81J]\x05\x00\x0e\x01\x00\x0f<\x00\x10\x07\x00\x00\x00Damkina\x00\x11\x00\x00\x00\x12\x01\x00\x00\x00\x00\x13\x00\x00\x14\x00\x00\x15\x00\x00\x00\x00\x00\x16\x00\x00\x00\x00\xfa\x01\n\x00\xf1\x00\x00\x00\n\x01\t\x03\x00\x00\xff\x01 \x00\xf1\x00\x00\x00\x00\x01\x81\xe5@D\x83\x00SC3#BD\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfb\x01\x06\x00\xf1\x00\x00\x00\x02\x00\xff\x01\n\x00\xf1\x00\x00\x00\x00\x05d\x00\x00\x00\xff\x01\n\x00\xf1\x00\x00\x00\x00\x07d\x00\x00\x00'
        msg, data_tail = kbeclient.Serializer().deserialize(data)
        assert msg is not None, 'Invalid initial data'

        entity_id, *_ = msg.get_values()
        self._entity_mgr.initialize_entity(entity_id, 'Account')
        handler = apphandler.OnEntityDestroyedHandler(self._entity_mgr)
        result: apphandler.HandlerResult = handler.handle(msg)
        assert result.success
