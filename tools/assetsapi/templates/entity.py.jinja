{# Имена для RPC сущности #}
{%- set client_enitity_remote_call_name = 'IClient' + entity_info.name + 'RemoteCall' -%}
{%- set cell_enitity_remote_call_name = 'ICell' + entity_info.name + 'RemoteCall' -%}
{%- set base_enitity_remote_call_name = 'IBase' + entity_info.name + 'RemoteCall' -%}

{# Имена интерефейсов IEntityCall для разных компонентов #}
{%- set cell_enitity_call_name = 'ICell' + entity_info.name + 'EntityCall' -%}
{%- set base_enitity_call_name = 'IBase' + entity_info.name + 'EntityCall' -%}

{# Entity names #}
{%- set base_enitity_name = 'IBase' + entity_info.name -%}
{%- set cell_enitity_name = 'ICell' + entity_info.name -%}

{%- if is_interfaces -%}
    {%- set def_file_prefix = 'file:///./../../../../scripts/entity_defs/interfaces/' -%}
{%- else -%}
    {%- set def_file_prefix = 'file:///./../../../../scripts/entity_defs/' -%}
{%- endif -%}

"""Интерфейс сущности "{{ entity_info.name }}" сгенерированный по её описанию в {{ entity_info.name }}.def.

See file:///./../../../../scripts/entity_defs/{{ entity_info.name }}.def
"""

from __future__ import annotations

from typing import Optional

import assetsapi
from assetsapi.kbeapi import IBaseRemoteCall, ICellRemoteCall, \
    IClientRemoteCall, IBaseEntity, ICellEntity, IProxyEntity, \
    IBaseEntityComponent, ICellEntityComponent, IEntityCall

from ..typesxml import *

{%- for type_name in component_types %}
from ..components.{{ type_name.lower() }} import IClient{{ type_name }}ComponentRemoteCall, \
    ICell{{ type_name }}ComponentRemoteCall, IBase{{ type_name }}ComponentRemoteCall
{%- endfor -%}
{{ '' }}
{{ '' }}
{{ '' }}
class {{ client_enitity_remote_call_name }}(IClientRemoteCall):
    """{{ entity_info.doc }} (client component)."""

    if not assetsapi.IN_THE_ENGINE:{%- if not (entity_info.ClientMethods or entity_info.Components) %} pass{% endif -%}
{{ '' }}
{%- for info in entity_info.ClientMethods %}
    {%- set line_number = def_file_prefix + entity_info.name + '.def#' + info.line_number|string %}
    {%- if info.comment -%}
        {%- set comment = info.comment + '.\n\n' + '        ' + line_number %}
    {%- else -%}
        {%- set comment = line_number %}
    {%- endif %}
{{ '' }}
        def {{ info.name }}({{ build_method_args(info, type_info_by_name, False) }}):
            """{{ comment }}"""
{% endfor %}

{%- for info in entity_info.Components %}
{{ '' }}
        @property
        def {{ info.name }}(self) -> IClient{{ info.type }}ComponentRemoteCall:
            """file:///./../../../../scripts/entity_defs/components/{{ info.type }}.def"""
            return IClient{{ info.type }}ComponentRemoteCall()
{%- endfor %}


class {{ base_enitity_remote_call_name }}(IBaseRemoteCall):
    """Remote call to base component of the entity '{{ entity_info.name }}'."""

    if not assetsapi.IN_THE_ENGINE:{%- if not (entity_info.BaseMethods or entity_info.Components) %} pass{% endif %}
{{ '' }}
{%- for info in entity_info.BaseMethods %}
    {%- set line_number = def_file_prefix + entity_info.name + '.def#' + info.line_number|string %}
    {%- if info.comment -%}
        {%- set comment = info.comment + '.\n\n' + '        ' + line_number %}
    {%- else -%}
        {%- set comment = line_number %}
    {%- endif %}
{{ '' }}
        def {{ info.name }}({{ build_method_args(info, type_info_by_name, False) }}):
            """{{ comment }}"""
{% endfor -%}

{%- for info in entity_info.Components %}
{{ '' }}
        @property
        def {{ info.name }}(self) -> IBase{{ info.type }}ComponentRemoteCall:
            """file:///./../../../../scripts/entity_defs/components/{{ info.type }}.def"""
            return IBase{{ info.type }}ComponentRemoteCall()
{%- endfor %}

{{ '' }}
{{ '' }}
class {{ cell_enitity_remote_call_name }}(ICellRemoteCall):
    """Remote call to cell component of the entity '{{ entity_info.name }}'."""

    if not assetsapi.IN_THE_ENGINE:{%- if not (entity_info.CellMethods or entity_info.Components) %} pass{% endif -%}
{{ '' }}
{%- for info in entity_info.CellMethods %}
    {%- set line_number = def_file_prefix + entity_info.name + '.def#' + info.line_number|string %}
    {%- if info.comment -%}
        {%- set comment = info.comment + '.\n\n' + '        ' + line_number %}
    {%- else -%}
        {%- set comment = line_number %}
    {%- endif %}
{{ '' }}
        def {{ info.name }}({{ build_method_args(info, type_info_by_name, False) }}):
            """{{ comment }}"""
{% endfor %}

{%- for info in entity_info.Components %}
{{ '' }}
        @property
        def {{ info.name }}(self) -> ICell{{ info.type }}ComponentRemoteCall:
            """file:///./../../../../scripts/entity_defs/components/{{ info.type }}.def"""
            return ICell{{ info.type }}ComponentRemoteCall()
{%- endfor %}
{{ '' }}
{{ '' }}
class {{ base_enitity_call_name }}(IEntityCall):
    """{{ entity_info.doc }} (base component)."""

    if not assetsapi.IN_THE_ENGINE:
{{ '' }}
        @property
        def client(self) -> {% if entity_info.ClientMethods -%}{{ client_enitity_remote_call_name }}{% else -%}None{%- endif %}:
            return {% if entity_info.ClientMethods -%}{{ client_enitity_remote_call_name }}(){% else -%}None{%- endif %}

        @property
        def cell(self) -> {% if entity_info.CellMethods -%}{{ cell_enitity_remote_call_name }}{% else -%}None{%- endif %}:
            return {% if entity_info.CellMethods -%}{{ cell_enitity_remote_call_name }}(){% else -%}None{%- endif %}

{%- for info in entity_info.BaseMethods %}
    {%- set line_number = def_file_prefix + entity_info.name + '.def#' + info.line_number|string %}
    {%- if info.comment -%}
        {%- set comment = info.comment + '.\n\n' + '        ' + line_number %}
    {%- else -%}
        {%- set comment = line_number %}
    {%- endif %}
{{ '' }}
        def {{ info.name }}({{ build_method_args(info, type_info_by_name, False) }}):
            """{{ comment }}"""
{%- endfor -%}
{{ '' }}
{{ '' }}
class {{ cell_enitity_call_name }}(IEntityCall):
    """{{ entity_info.doc }} (cell component)."""

    if not assetsapi.IN_THE_ENGINE:

        @property
        def base(self) -> {% if entity_info.BaseMethods -%}{{ base_enitity_remote_call_name }}{% else -%}None{%- endif %}:
            return {% if entity_info.BaseMethods -%}{{ base_enitity_remote_call_name }}(){% else -%}None{%- endif %}

        @property
        def client(self) -> {% if entity_info.ClientMethods -%}{{ client_enitity_remote_call_name }}{% else -%}None{%- endif %}:
            return {% if entity_info.ClientMethods -%}{{ client_enitity_remote_call_name }}(){% else -%}None{%- endif %}

        @property
        def allClients(self) -> {% if entity_info.ClientMethods -%}{{ client_enitity_remote_call_name }}{% else -%}None{%- endif %}:
            return {% if entity_info.ClientMethods -%}{{ client_enitity_remote_call_name }}(){% else -%}None{%- endif %}

        @property
        def otherClients(self) -> {% if entity_info.ClientMethods -%}{{ client_enitity_remote_call_name }}{% else -%}None{%- endif %}:
            return {% if entity_info.ClientMethods -%}{{ client_enitity_remote_call_name }}(){% else -%}None{%- endif %}

{%- for info in entity_info.CellMethods %}
    {%- set line_number = def_file_prefix + entity_info.name + '.def#' + info.line_number|string %}
    {%- if info.comment -%}
        {%- set comment = info.comment + '.\n\n' + '        ' + line_number %}
    {%- else -%}
        {%- set comment = line_number %}
    {%- endif %}
{{ '' }}
        def {{ info.name }}({{ build_method_args(info, type_info_by_name, True) }}):
            """{{ comment }}"""
{% endfor %}
{{ '' }}
{{ '' }}
{%- if is_proxy_entity %}
class {{ base_enitity_name }}({{ base_enitity_call_name }}, IProxyEntity):
{%- else %}
class {{ base_enitity_name }}({{ base_enitity_call_name }}, IBaseEntity):
{%- endif %}
    """{{ entity_info.doc }} (base component)."""

    if not assetsapi.IN_THE_ENGINE:{%- if not entity_info.get_base_properties() %} pass{% endif -%}

    {%- for prop in entity_info.get_base_properties() %}
        {%- set line_number = def_file_prefix + entity_info.name + '.def#' + prop.line_number|string %}
        {%- if prop.comment -%}
            {%- set comment = prop.comment + ' (' + line_number + ')' %}
        {%- else -%}
            {%- set comment = line_number %}
        {%- endif %}
{{ '' }}
        """{{ comment }}"""
        {%- if type_info_by_name[prop.type].py_type_name == 'IEntityCall' %}
        {{ prop.name }}: Optional[{{ type_info_by_name[prop.type].py_type_name }}]
        {%- else %}
        {{ prop.name }}: {{ type_info_by_name[prop.type].py_type_name }}
        {%- endif %}
    {%- endfor %}


class {{ cell_enitity_name }}({{ cell_enitity_call_name }}, ICellEntity):
    """{{ entity_info.doc }} (cell component)."""

    if not assetsapi.IN_THE_ENGINE:{%- if not entity_info.get_cell_properties() %} pass{% endif -%}
{{ '' }}
    {%- for prop in entity_info.get_cell_properties() %}
        {%- set line_number = def_file_prefix + entity_info.name + '.def#' + prop.line_number|string %}
        {%- if prop.comment -%}
            {%- set comment = prop.comment + ' (' + line_number + ')' %}
        {%- else -%}
            {%- set comment = line_number %}
        {%- endif %}
        """{{ comment }}"""
        {{ prop.name }}: {{ type_info_by_name[prop.type].py_type_name }}
    {%- endfor %}

# --- Components API (if the entity has components) ---

{%- for component_type in component_types %}
    {%- set comp_type = component_type %}
    {%- set comp_info = comp_info_by_comp_type_name[comp_type].def_cls_data %}
    {%- set comp_attr_names = comp_names_by_comp_type_name[comp_type] %}

    {#- Имена для RPC компонента сущности #}
    {%- set client_component_remote_call_name = 'IClient' + comp_type + 'ComponentRemoteCall' -%}
    {%- set cell_component_remote_call_name = 'ICell' + comp_type + 'ComponentRemoteCall' -%}
    {%- set base_component_remote_call_name = 'IBase' + comp_type + 'ComponentRemoteCall' -%}

    {#- Имя компонента под конкретную сущность #}
    {%- set base_component_name = 'IBase' + comp_type + 'ComponentOf' + entity_info.name -%}
    {%- set cell_component_name = 'ICell' + comp_type + 'ComponentOf' + entity_info.name -%}

{{ '' }}
{{ '' }}
{{ '' }}
class {{ base_component_name }}(IBaseEntityComponent):
    """{{ comp_info.doc }} (base component)."""

    if not assetsapi.IN_THE_ENGINE:
{{ '' }}
        @property
        def client(self) -> {{ client_component_remote_call_name }}:
            return {{ client_component_remote_call_name }}()

        @property
        def cell(self) -> {{ cell_component_remote_call_name }}:
            return {{ cell_component_remote_call_name }}()
{{ '' }}
    {%- for prop in comp_info.get_base_properties() %}
        {%- set line_number = def_file_prefix + entity_info.name + '.def#' + prop.line_number|string %}
        {%- if prop.comment -%}
            {%- set comment = prop.comment + ' (' + line_number + ')' %}
        {%- else -%}
            {%- set comment = line_number %}
        {%- endif %}
        @property
        def {{ prop.name }}(self) -> {{ type_info_by_name[prop.type].py_type_name }}:
            """{{ comment }}"""
            return {{ type_info_by_name[prop.type].py_type_name }}()

        @{{ prop.name }}.setter
        def {{ prop.name }}(self, value: {{ type_info_by_name[prop.type].py_type_name }}):
            pass
    {%- endfor -%}
{{ '' }}
{{ '' }}
        @property
        def owner(self) -> {{ base_enitity_name }}:
            return {{ base_enitity_name }}() # type: ignore

        @property
        def className(self) -> str:
            return '{{ comp_type }}'

        @property
        def name(self) -> str:
            return {{ comp_attr_names }}
{{ '' }}
    {%- for info in comp_info.BaseMethods %}
        {%- set line_number = def_file_prefix + entity_info.name + '.def#' + info.line_number|string %}
        {%- if info.comment -%}
            {%- set comment = info.comment + '.\n\n' + '        ' + line_number %}
        {%- else -%}
            {%- set comment = line_number %}
        {%- endif %}
{{ '' }}
        def {{ info.name }}({{ build_method_args(info, type_info_by_name, False) }}):
            """{{ comment }}"""
    {%- endfor -%}
{{ '' }}
{{ '' }}
{{ '' }}
class {{ cell_component_name }}(ICellEntityComponent):
    """{{ comp_info.doc }} (cell component)."""

    if not assetsapi.IN_THE_ENGINE:
{{ '' }}
        @property
        def client(self) -> {{ client_component_remote_call_name }}:
            return {{ client_component_remote_call_name }}()

        @property
        def allClients(self) -> {{ client_component_remote_call_name }}:
            return {{ client_component_remote_call_name }}()

        @property
        def otherClients(self) -> {{ client_component_remote_call_name }}:
            return {{ client_component_remote_call_name }}()

        @property
        def base(self) -> {{ base_component_remote_call_name }}:
            return {{ base_component_remote_call_name }}()

    {%- for prop in comp_info.get_cell_properties() %}
        {%- set line_number = def_file_prefix + entity_info.name + '.def#' + prop.line_number|string %}
        {%- if prop.comment -%}
            {%- set comment = prop.comment + ' (' + line_number + ')' %}
        {%- else -%}
            {%- set comment = line_number %}
        {%- endif %}
{{ '' }}
        @property
        def {{ prop.name }}(self) -> {{ type_info_by_name[prop.type].py_type_name }}:
            """{{ comment }}"""
            return {{ type_info_by_name[prop.type].py_type_name }}()

        @{{ prop.name }}.setter
        def {{ prop.name }}(self, value: {{ type_info_by_name[prop.type].py_type_name }}):
            pass
    {%- endfor -%}
{{ '' }}
{{ '' }}
        @property
        def owner(self) -> {{ cell_enitity_call_name }}:
            return {{ cell_enitity_call_name }}() # type: ignore

        @property
        def className(self) -> str:
            return '{{ comp_type }}'

        @property
        def name(self) -> str:
            return {{ comp_attr_names }}

    {%- for info in comp_info.CellMethods %}
        {%- set line_number = def_file_prefix + comp_type + '.def#' + info.line_number|string %}
        {%- if info.comment -%}
            {%- set comment = info.comment + '.\n\n' + '        ' + line_number %}
        {%- else -%}
            {%- set comment = line_number %}
        {%- endif %}
{{ '' }}
        def {{ info.name }}({{ build_method_args(info, type_info_by_name, True) }}):
            """{{ comment }}"""
{%- endfor -%}

{%- endfor %}

